name: Download, Extract, and Upload Large Files

on:
  workflow_dispatch:

jobs:
  process-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Required Tools
        run: sudo apt-get install -y tar unzip aria2 file

      - name: Download File
        run: |
          FILE_URL="https://bn.d.miui.com/V12.5.10.0.RGGINXM/miui_BEGONIAININGlobal_V12.5.10.0.RGGINXM_4716f60949_11.0.zip"
          OUTPUT_FILE="downloaded_file"

          echo "🚀 Downloading file from $FILE_URL..."
          aria2c -x 16 -s 16 -k 1M --allow-overwrite=true -o $OUTPUT_FILE "$FILE_URL"

          echo "✅ Download completed. Checking file size..."
          ls -lh $OUTPUT_FILE

      - name: Detect and Rename File
        run: |
          FILE_TYPE=$(file --mime-type -b downloaded_file)
          echo "🧩 Detected MIME type: $FILE_TYPE"

          if [[ "$FILE_TYPE" == "application/gzip" ]]; then
            mv downloaded_file file.tgz
          elif [[ "$FILE_TYPE" == "application/zip" || "$FILE_TYPE" == "application/java-archive" ]]; then
            mv downloaded_file file.zip
          elif [[ "$FILE_URL" == *.zip ]]; then
            mv downloaded_file file.zip
          elif [[ "$FILE_URL" == *.tgz || "$FILE_URL" == *.tar.gz ]]; then
            mv downloaded_file file.tgz
          else
            echo "⚠️ Unknown file type, assuming ZIP just in case..."
            mv downloaded_file file.zip
          fi

          echo "✅ File renamed based on detected or assumed type."

      - name: Extract File
        run: |
          mkdir -p extracted_files

          if [[ -f "file.tgz" ]]; then
            echo "📦 Extracting TGZ file..."
            tar -xvzf file.tgz -C extracted_files
          elif [[ -f "file.zip" ]]; then
            echo "📦 Extracting ZIP file..."
            unzip -q file.zip -d extracted_files
          else
            echo "❌ No valid archive file found!"
            exit 1
          fi

      - name: Identify Large Files
        run: |
          echo "🔍 Checking for files larger than 100MB..."
          find extracted_files -type f -size +100M > large_files.txt || true
          if [ -s large_files.txt ]; then
            echo "📂 Large files detected:"
            cat large_files.txt
          else
            echo "✅ No large files found!"
          fi

      - name: Remove Large Files Before Commit
        run: |
          if [ -s large_files.txt ]; then
            echo "🚫 Removing large files before committing..."
            while IFS= read -r file; do
              rm -f "$file"
            done < large_files.txt
          fi

      - name: Commit and Push Small Extracted Files
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git

          BRANCH_NAME="extracted-files-${{ github.run_id }}"
          git checkout -b "$BRANCH_NAME"

          if [ "$(ls -A extracted_files)" ]; then
            git add extracted_files/*
            git commit -m "Added extracted small files (large files removed)"
            git push origin "$BRANCH_NAME"
          else
            echo "⚠️ No files to commit."
          fi
